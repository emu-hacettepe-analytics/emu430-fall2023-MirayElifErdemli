return(sum(x))
}
apply(x = df, margin = 1, fun = fun)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
fun <- function(x) {
return(sum(x))
}
apply(x = df, margin = 1, fun = sum)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
fun <- function(x) {
return(sum(x))
}
apply(x = df, margin = 1, fun = sum(x))
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
f <- function(x, FUN = default(sum)) {
return(FUN(x))
}
apply(x = df, margin = 1, fun = f)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
f <- function(x, fun = default(sum)) {
return(FUN(x))
}
apply(x = df, margin = 1, fun = f)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
apply(df, 1, sum)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
apply(df, 2, sum)
# Veri çerçevesi oluştur
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
# f fonksiyonunu tanımla
f <- function(row) {
# Burada yapmak istediğiniz işlemi gerçekleştirin
# Örneğin, satırdaki değerlerin toplamını alalım
sum_row <- sum(row)
return(sum_row)
}
# apply fonksiyonunu kullanarak f fonksiyonunu uygula
result <- apply(df, margin = 1, FUN = f)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
apply(df, 2, sum)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
df
apply(df, 1, sum)
library(dslabs)
data(murders)
head(heights)
library(dslabs)
data(murders)
head(heights)
head(sex)
library(dslabs)
data(murders)
head(heights,sex)
library(dslabs)
data(murders)
head(heights)
df < data.frame(heights, sex)
library(dslabs)
data(murders)
head(heights)
str(heights)
library(dslabs)
data(murders)
head(sex)
library(dslabs)
data(murders)
head(female)
library(dslabs)
data(murders)
head(heights)
prop.table(table(heights$sex))
library(dslabs)
data(murders)
head(heights)
murders$sex
library(dslabs)
data(murders)
head(heights)
murders$state
library(dslabs)
data(murders)
head(heights)
library(dslabs)
data(murders)
head(heights)
hegihts$sex
library(dslabs)
data(murders)
head(heights)
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights$sex
library(dslabs)
data(murders)
heights
heights $ sex
library(dslabs)
data(murders)
# `murders` veri kümesinden `heights` verilerine eriş
heights <- murders$heights
# `heights` veri çerçevesinden `sex` verilerine eriş
sex <- heights$sex
library(dslabs)
data(murders)
# `murders` veri kümesinden `heights` verilerine eriş
heights <- murders$heights
# `heights` veri çerçevesinden `sex` verilerine eriş
sex <- heights$sex
library(dslabs)
data(murders)
# `murders` veri kümesinden `heights` verilerine eriş
heights <- murders$heights
heights
# `heights` veri çerçevesinden `sex` verilerine eriş
sex <- heights$sex
sex
library(dslabs)
data(murders)
heights <- murders$heights
heights
sex <- heights$sex
sex
library(dslabs)
data(murders)
heights <- murders$heights
sex <- heights$sex
library(dslabs)
data(murders)
murders$heights
library(dslabs)
data(murders)
murders$heights
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
murders$population
library(dslabs)
data(murders)
names(murders)
library(dslabs)
data(murders)
head(heights)
library(dslabs)
data(murders)
library(dslabs)
data(murders)
library(dslabs)
data(murders)
murders
library(dslabs)
data(murders)
murders
heights
murders$heights
library(dslabs)
data(murders)
heights
murders$heights
library(dslabs)
data(murders)
heights
murders$heights
library(dslabs)
data(heights)
heights
library(dslabs)
data(heights)
heights
heights$sex
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
library(dslabs)
data(heights)
heights
heights$sex
library(dslabs)
data(murders)
head(heights)
library(dslabs)
data(heights)
head(heights)
library(dslabs)
data(heights)
head(heights)
prop.table(table(heights$sex))
library(dslabs)
data(heights)
head(heights)
table(heights$sex)
library(dslabs)
data(heights)
head(heights)
prop.table(table(heights$sex))
library(dslabs)
data("heights")
index <- heights$sex == "Male“
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
library(dslabs)
data("heights")
library(dslabs)
data("heights")
index <- heights$sex == "Male"
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Male"
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Female"
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Male“
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
library(dslabs)
data(heights)
heights$height
library(dslabs)
data(heights)
library(dslabs)
data(heights)
heights$height
library(dslabs)
data(heights)
heights
library(dslabs)
data(heights)
heights
library(dslabs)
data(heights)
print(heights)
library(dslabs)
data(heights)
index <- heights$sex
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$sex[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex
average <- sum(x) / length(x)
sd <- sqrt( sum( (x-average)^2) / length(x))
x <- heights$sex[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Male“
library(dslabs)
data(heights)
index <- heights$sex == "Male"
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Male"
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
library(dslabs)
data(heights)
index <- heights$sex == "Male"
x <- heights$sex[index]
average <- mean(x)
sd <- sd(x)
library(dslabs)
data(heights)
index <- heights$sex == "Male"
x <- heights$height[index]
average <- mean(x)
sd <- sd(x)
c(average = average, sd=sd)
sum(abs(z) < 2)
pnorm(70.5, mean(x), sd(x))
mean(x <= 69.5)
x <- heights$height[index]
p <- seq(0.05, 0.95, 0.05)
observed_quantiles <- quantile(x, p)
theoretical_quantiles <- qnorm(p, mean = mean(x), sd = sd(x))
plot(theoretical_quantiles, observed_quantiles)
abline(0, 1)
library(ggplot2)
library(ggplot2)
library(tidyverse)
library(tidyverse)
library(dslabs)
data(murders)
library(tidyverse)
library(dslabs)
data(murders)
library(tidyverse)
library(dslabs)
data(murders)
murders
library(tidyverse)
library(dslabs)
data(murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
murders
library(tidyverse)
library(dslabs)
data(murders)
murders %>% ggplot()
library(tidyverse)
library(dslabs)
data(murders)
murders %>% ggplot()
library(tidyverse)
data(murders)
murders %>% ggplot(
library(tidyverse)
library(dslabs)
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
ggplot()
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
ggplot()
library(tidyverse)
library(dslabs)
data(murders)
# first option
ggplot(data=murders)
ggplot
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
p <- murders %>% ggplot()
class(p)
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
print(ggplot())
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
print(ggplot())
library(tidyverse)
library(dslabs)
data(murders)
ggplot(data=murders)
print(ggplot())
p <- murders %>% ggplot()
class(p)
library(tidyverse)
library(dslabs)
data(murders)
print(ggplot(data = murders))
p <- seq(0.05, 0.95, 0.05)
observed_quantiles <- quantile(x, p)
theoretical_quantiles <- qnorm(p, mean = mean(x), sd = sd(x))
plot(theoretical_quantiles, observed_quantiles)
abline(0, 1)
library(tidyverse)
library(dslabs)
data(murders)
print(ggplot(data = murders))
library(tidyverse)
library(dslabs)
data(murders)
print(ggplot(data = murders))
p <- ggplot(data = my_data, aes(x = x_variable, y = y_variable))
library(tidyverse)
library(dslabs)
data(murders)
print(ggplot(data = murders))
murders %>% ggplot() + geom_point(aes(x = population/10^6, y = total))
